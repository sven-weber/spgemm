#!/bin/bash
#SBATCH -J mmN{{ n_machines }}
#SBATCH --time=03:00:00
#SBATCH --constraint=mc
#SBATCH -o {{ log_out }}
#SBATCH -e {{ err_out }}
#SBATCH -N {{ n_machines }}
#SBATCH -n {{ mpi_processes }}
#SBATCH --ntasks-per-node={{ mpi_per_node }}
#SBATCH --cpus-per-task={{ processes_per_mpi }}
#SBATCH -A g34
#SBATCH --sockets-per-node=2
#SBATCH --cores-per-socket=64
#SBATCH --threads-per-core=2

{% if last_job %}
#SBATCH --dependency=afterany:{{ last_job }}
{% endif %}

export FI_CXI_RX_MATCH_MODE=hybrid
export OMP_NUM_THREADS=${SLURM_CPUS_PER_TASK}
export OMP_STACKSIZE=8M
export SRUN_CPUS_PER_TASK=${SLURM_CPUS_PER_TASK}


CPU_LIST=$(cat /proc/self/status | grep Cpus_allowed_list | cut -f2)
echo "CPUs bound by Slurm: $CPU_LIST"

OMP_PLACES_LIST=""
for item in $(echo $CPU_LIST | tr ',' ' '); do
	if [[ $item == *-* ]]; then
		start=${item%-*}
		end=${item#*-}
		for ((cpu=start; cpu<=end; cpu++)); do
			OMP_PLACES_LIST="${OMP_PLACES_LIST}${cpu},"
		done
	else
		OMP_PLACES_LIST="${OMP_PLACES_LIST}${item},"
	fi
done

OMP_PLACES_LIST="{${OMP_PLACES_LIST%,}}"
echo "Setting OMP_PLACES=$OMP_PLACES_LIST"

export OMP_PROC_BIND=true
export OMP_PLACES=$OMP_PLACES_LIST


impls={{ impls }}
matrices={{ matrices }}

for impl in ${impls}
do
	for mtx in ${matrices}
	do
		echo start ${impl} with matrix ${mtx} on {{ mpi_processes }} at $(date)
		RDIR={{ runs_dir }}/N_SEC_{{ nsec }}/{{ n_machines }}_{{ mpi_processes }}_${impl}_${mtx}
    		mkdir -p $RDIR 
		srun --cpus-per-task=${SLURM_CPUS_PER_TASK} --cpu-bind=verbose {{ cmd }} ${impl} ${mtx} ${RDIR} {{ n_runs }} {{ n_warmup }} {{ shuffling }} {{ partitioning }} {{ parallel_load_str }} {{ persist_str }} {{ matrix_path }}
		echo finished ${impl} with matrix ${mtx} on {{ mpi_processes }} at $(date)
	done
done
